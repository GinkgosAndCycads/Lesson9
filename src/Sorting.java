import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author arsh3560
 */
public class Sorting extends javax.swing.JFrame {
        DefaultListModel model = new DefaultListModel();
	int[] nums = new int[50000];
    /**
     * Creates new form Sorting
     */
    public Sorting() {
        initComponents();DefaultListModel model = null;
	int[] nums = new int[50000]; 
        lstnums.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngenerate = new javax.swing.JButton();
        btnbubble = new javax.swing.JButton();
        btnselection = new javax.swing.JButton();
        btninsertion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstnums = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btngenerate.setText("Generate Numbers");
        btngenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenerateActionPerformed(evt);
            }
        });

        btnbubble.setText("Bubble");
        btnbubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbubbleActionPerformed(evt);
            }
        });

        btnselection.setText("Selection");
        btnselection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectionActionPerformed(evt);
            }
        });

        btninsertion.setText("Insertion");
        btninsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertionActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstnums);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btngenerate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btninsertion, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(btnselection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnbubble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btngenerate)
                    .addComponent(btnbubble))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnselection)
                        .addGap(18, 18, 18)
                        .addComponent(btninsertion))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbubbleActionPerformed
        model.clear();
				double stime = System.currentTimeMillis();
				bubbleSort(nums);
				double etime = System.currentTimeMillis();
				System.out.println(etime);
				for (int x = 0; x< nums.length; x++){
					model.addElement(nums[x]); 
                                }
    }//GEN-LAST:event_btnbubbleActionPerformed

    private void btngenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenerateActionPerformed
        model.clear(); 
        for(int x = 0; x<nums.length; x++){ 
            nums[x] = (int)(Math.random() * 100000) + 1; 
            model.addElement(nums[x]);
        }
    }//GEN-LAST:event_btngenerateActionPerformed

    private void btnselectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectionActionPerformed
        model.clear();
				double stime = System.currentTimeMillis();
				selectionSort(nums);
				double etime = System.currentTimeMillis();
				System.out.println(etime);
				for (int x = 0; x< nums.length; x++){
					model.addElement(nums[x]);
    }//GEN-LAST:event_btnselectionActionPerformed

    }
    private void btninsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertionActionPerformed
                                model.clear();
				double stime = System.currentTimeMillis();
				insertionSort(nums);
				double etime = System.currentTimeMillis();
				System.out.println(etime);
				for (int x = 0; x< nums.length; x++){
					model.addElement(nums[x]);
				}
    }//GEN-LAST:event_btninsertionActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sorting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sorting().setVisible(true);
            }
        });
    } 
    public static void bubbleSort(int[] a){
	   	int k = 0;
	   	boolean exchangeMade = true;
		// Make up to n - 1 passes through array, exit 
		//early if no exchanges are made on previous pass
	  
	 	while ((k < a.length - 1) && exchangeMade){
	      		exchangeMade = false;
	      		k++;
	      		for (int j = 0; j < a.length - k; j++)  
	         		if (a[j] > a[j + 1]){
	            			swap(a, j, j + 1);		 
	            			exchangeMade = true;
	         		}
	 	}
	} 
    public static void swap(int[] a, int x, int y){
	   int temp = a[x];
	   a[x] = a[y];
	   a[y] = temp;
	} 
    public static void selectionSort(int[] a){
		   for (int i = 0; i < a.length - 1; i++){
		      int minIndex = findMinimum(a, i);
		      if (minIndex != i)
			//if lowest is not already in place
		         swap(a, i, minIndex);
		   } //end for
		}  

		//supporting findMinimum method

		public static int findMinimum(int[] a, int first){
		   //first=where to start looking from
		   //assume first is also the smallest for now
		   int minIndex = first; 
		   for (int i = first + 1; i < a.length; i++)
		      if (a[i] < a[minIndex])
		         minIndex = i;
		   return minIndex;
		}

		//supporting swap method (same as bubble sort swap)

		public static void insertionSort(int a[]){
			int itemToInsert, j;
			boolean stillLooking;

			//on the kth pass, pass item k upwards in list
			//and insert it in its proper place amoung the
			//first k entries in an array

			for (int k=1; k<a.length; k++){
			//move backwards through list, looking for
			//the right place to insert a[k];
				itemToInsert = a[k];
				j=k-1;
				stillLooking=true;
				while(j >=0 && stillLooking){
					if (itemToInsert < a[j]){
						//move item higher
						a[j+1] = a[j];
						j--;
					}else{
						//we have found new home for a[k];
						stillLooking=false;
					}//end else// j+1 is where the item goes
					a[j+1]=itemToInsert;
				}//end while
		  	}//end for
		}//end method


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbubble;
    private javax.swing.JButton btngenerate;
    private javax.swing.JButton btninsertion;
    private javax.swing.JButton btnselection;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstnums;
    // End of variables declaration//GEN-END:variables
}
